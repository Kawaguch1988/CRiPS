<?xml version="1.0" encoding="UTF-8"?>
<BlockDrawerSet name="factory" type="stack" location="southwest"
	window-per-drawer="no" drawer-draggable="no">

	<BlockDrawer name="タートル" type="factory" button-color="247 0 0">
		<BlockGenusMember>Turtle-fd[@int]</BlockGenusMember>
		<BlockGenusMember>Turtle-bk[@int]</BlockGenusMember>
		<BlockGenusMember>Turtle-rt[@int]</BlockGenusMember>
		<BlockGenusMember>Turtle-lt[@int]</BlockGenusMember>
		<BlockGenusMember>Turtle-up[]</BlockGenusMember>
		<BlockGenusMember>Turtle-down[]</BlockGenusMember>
		<BlockGenusMember>Turtle-color[@int]</BlockGenusMember>
		<BlockGenusMember>Turtle-input[]</BlockGenusMember>
		<BlockGenusMember>Turtle-print[@string]</BlockGenusMember>
		<BlockGenusMember>Turtle-random[@int]</BlockGenusMember>
	</BlockDrawer>

	<BlockDrawer name="構造化・オブジェクト" type="factory" button-color="255 255 255">
		<BlockGenusMember>abstraction</BlockGenusMember>
		<BlockGenusMember>procedure</BlockGenusMember>
		<BlockGenusMember>proc-param-number</BlockGenusMember>
		<BlockGenusMember>proc-param-double-number</BlockGenusMember>
		<BlockGenusMember>proc-param-boolean</BlockGenusMember>
		<BlockGenusMember>proc-param-string</BlockGenusMember>
		<BlockGenusMember>return</BlockGenusMember>
		<BlockGenusMember>constructor</BlockGenusMember>
		<BlockGenusMember>callActionMethod2</BlockGenusMember>
		<BlockGenusMember>callGetterMethod2</BlockGenusMember>
	</BlockDrawer>
	<!-- 
	<BlockDrawer name="オブジェクト" type="factory" button-color="20 20 20">
		<BlockGenusMember>callActionMethod2</BlockGenusMember>
		<BlockGenusMember>callGetterMethod2</BlockGenusMember>
	</BlockDrawer>
	 -->
	<BlockDrawer name="分岐、繰返" type="factory" button-color="255 80 0">
		<BlockGenusMember>ifelse</BlockGenusMember>
		<BlockGenusMember>while</BlockGenusMember>
		<BlockGenusMember>dowhile</BlockGenusMember>
		<BlockGenusMember>break</BlockGenusMember>
		<BlockGenusMember>continue</BlockGenusMember>
	</BlockDrawer>

	<BlockDrawer name="調べる" type="factory" button-color="204 204 102">
		<BlockGenusMember>equals-number</BlockGenusMember>
		<BlockGenusMember>not-equals-number</BlockGenusMember>
		<BlockGenusMember>lessthan</BlockGenusMember>
		<BlockGenusMember>greaterthan</BlockGenusMember>
		<BlockGenusMember>lessthanorequalto</BlockGenusMember>
		<BlockGenusMember>greaterthanorequalto</BlockGenusMember>
		<BlockGenusMember>equals-number-double</BlockGenusMember>
		<BlockGenusMember>not-equals-number-double</BlockGenusMember>
		<BlockGenusMember>lessthan-double</BlockGenusMember>
		<BlockGenusMember>greaterthan-double</BlockGenusMember>
		<BlockGenusMember>lessthanorequalto-double</BlockGenusMember>
		<BlockGenusMember>greaterthanorequalto-double</BlockGenusMember>
		<BlockGenusMember>equals-boolean</BlockGenusMember>
		<BlockGenusMember>not-equals-boolean</BlockGenusMember>		
		<BlockGenusMember>equals-string</BlockGenusMember>	
		<BlockGenusMember>and</BlockGenusMember>
		<BlockGenusMember>or</BlockGenusMember>
		<BlockGenusMember>not</BlockGenusMember>
		<BlockGenusMember>true</BlockGenusMember>
		<BlockGenusMember>false</BlockGenusMember>
	</BlockDrawer>

	
	<BlockDrawer name="計算" type="factory" button-color="102 129 255">
		<BlockGenusMember>sum</BlockGenusMember>
		<BlockGenusMember>difference</BlockGenusMember>
		<BlockGenusMember>product</BlockGenusMember>
		<BlockGenusMember>quotient</BlockGenusMember>
		<BlockGenusMember>remainder</BlockGenusMember>

		<BlockGenusMember>sum-double</BlockGenusMember>
		<BlockGenusMember>difference-double</BlockGenusMember>
		<BlockGenusMember>product-double</BlockGenusMember>
		<BlockGenusMember>quotient-double</BlockGenusMember>
		<BlockGenusMember>remainder-double</BlockGenusMember>

		<BlockGenusMember>string-append</BlockGenusMember>
		
		<BlockGenusMember>cui-random</BlockGenusMember>
		<BlockGenusMember>sqrt</BlockGenusMember>
		<BlockGenusMember>sin</BlockGenusMember>
		<BlockGenusMember>cos</BlockGenusMember>
		<BlockGenusMember>tan</BlockGenusMember>
		<BlockGenusMember>log</BlockGenusMember>
		<BlockGenusMember>toRadians</BlockGenusMember>
	</BlockDrawer>
<!--	
	<BlockDrawer name="数学" type="factory" button-color="102 129 255">
		<BlockGenusMember>cui-random</BlockGenusMember>
		<BlockGenusMember>sqrt</BlockGenusMember>
		<BlockGenusMember>sin</BlockGenusMember>
		<BlockGenusMember>cos</BlockGenusMember>
		<BlockGenusMember>tan</BlockGenusMember>
		<BlockGenusMember>log</BlockGenusMember>
		<BlockGenusMember>toRadians</BlockGenusMember>
	</BlockDrawer>
 -->
		<!--<BlockGenusMember>pi</BlockGenusMember> <BlockGenusMember>e</BlockGenusMember> 
			<BlockGenusMember>int</BlockGenusMember> <BlockGenusMember>pow</BlockGenusMember> 
			<BlockGenusMember>round</BlockGenusMember> <BlockGenusMember>min</BlockGenusMember> 
			<BlockGenusMember>max</BlockGenusMember> <BlockGenusMember>abs</BlockGenusMember> 
			<BlockGenusMember>sqrt</BlockGenusMember> <BlockGenusMember>sin</BlockGenusMember> 
			<BlockGenusMember>cos</BlockGenusMember> <BlockGenusMember>tan</BlockGenusMember> 
			<BlockGenusMember>asin</BlockGenusMember> <BlockGenusMember>acos</BlockGenusMember> 
			<BlockGenusMember>log</BlockGenusMember> <BlockGenusMember>ln</BlockGenusMember> 
			<BlockGenusMember>atan</BlockGenusMember> -->
	
	<BlockDrawer name="変数の定義" type="factory" button-color="230 0 255">
		<BlockGenusMember>local-var-int-number</BlockGenusMember>
		<BlockGenusMember>local-var-double-number</BlockGenusMember>
		<BlockGenusMember>local-var-string</BlockGenusMember>
		<BlockGenusMember>local-var-boolean</BlockGenusMember>
		<BlockGenusMember>local-var-object</BlockGenusMember>
		<BlockGenusMember>local-var-object-Turtle</BlockGenusMember>
		<BlockGenusMember>local-var-object-Text</BlockGenusMember>
		<BlockGenusMember>local-var-object-Image</BlockGenusMember>
		<BlockGenusMember>local-var-object-Sound</BlockGenusMember>
<!-- 		
		<BlockGenusMember>private-var-int-number</BlockGenusMember>
		<BlockGenusMember>private-var-double-number</BlockGenusMember>
		<BlockGenusMember>private-var-string</BlockGenusMember>
		<BlockGenusMember>private-var-boolean</BlockGenusMember>
		<BlockGenusMember>private-var-object</BlockGenusMember>
		<BlockGenusMember>private-var-object-Text</BlockGenusMember>
		<BlockGenusMember>private-var-object-Image</BlockGenusMember>
		<BlockGenusMember>private-var-object-Sound</BlockGenusMember>
 -->			 	
	</BlockDrawer>

	<BlockDrawer name="変換" type="factory" button-color="204 0 255">
		<BlockGenusMember>toIntFromDouble</BlockGenusMember>
		<BlockGenusMember>toIntFromString</BlockGenusMember>
		<BlockGenusMember>toDoubleFromInt</BlockGenusMember>
		<BlockGenusMember>toDoubleFromString</BlockGenusMember>
		<BlockGenusMember>toStringFromInt</BlockGenusMember>
		<BlockGenusMember>toStringFromDouble</BlockGenusMember>
		<BlockGenusMember>toStringFromObject</BlockGenusMember>
	</BlockDrawer>

	<BlockDrawer name="値" type="factory" button-color="255 61 200">
		<BlockGenusMember>number</BlockGenusMember>
		<BlockGenusMember>double-number</BlockGenusMember>
		<BlockGenusMember>string</BlockGenusMember>
		<BlockGenusMember>true</BlockGenusMember>
		<BlockGenusMember>false</BlockGenusMember>
	</BlockDrawer>

	<BlockDrawer name="色" type="factory" button-color="255 155 64">
		<BlockGenusMember>blue</BlockGenusMember>
		<BlockGenusMember>cyan</BlockGenusMember>
		<BlockGenusMember>green</BlockGenusMember>
		<BlockGenusMember>magenta</BlockGenusMember>
		<BlockGenusMember>orange</BlockGenusMember>
		<BlockGenusMember>pink</BlockGenusMember>
		<BlockGenusMember>red</BlockGenusMember>
		<BlockGenusMember>white</BlockGenusMember>
		<BlockGenusMember>yellow</BlockGenusMember>
		<BlockGenusMember>gray</BlockGenusMember>
		<BlockGenusMember>lightGray</BlockGenusMember>
		<BlockGenusMember>darkGray</BlockGenusMember>
		<BlockGenusMember>black</BlockGenusMember>
<!--  		<BlockGenusMember>new-object-Color</BlockGenusMember>-->
	</BlockDrawer>
 
	<BlockDrawer name="タートル(座標と大きさ)" type="factory" button-color="153 0 0">
		<BlockGenusMember>Turtle-getX[]</BlockGenusMember>
		<BlockGenusMember>Turtle-getY[]</BlockGenusMember>
		<BlockGenusMember>Turtle-warp[@int@int]</BlockGenusMember>
		<BlockGenusMember>Turtle-getWidth[]</BlockGenusMember>
		<BlockGenusMember>Turtle-getHeight[]</BlockGenusMember>
		<BlockGenusMember>Turtle-scale[@int]</BlockGenusMember>
		<BlockGenusMember>Turtle-size[@int@int]</BlockGenusMember>
		<BlockGenusMember>Turtle-large[@int]</BlockGenusMember>
		<BlockGenusMember>Turtle-small[@int]</BlockGenusMember>
		<BlockGenusMember>Turtle-wide[@int]</BlockGenusMember>
		<BlockGenusMember>Turtle-narrow[@int]</BlockGenusMember>
		<BlockGenusMember>Turtle-tall[@int]</BlockGenusMember>
		<BlockGenusMember>Turtle-little[@int]</BlockGenusMember>
	</BlockDrawer>
<!-- 
	<BlockDrawer name="タートル(大きさ)" type="factory" button-color="153 0 0">
		<BlockGenusMember>getWidth</BlockGenusMember>
		<BlockGenusMember>getHeight</BlockGenusMember>
		<BlockGenusMember>scale</BlockGenusMember>
		<BlockGenusMember>size</BlockGenusMember>
		<BlockGenusMember>large</BlockGenusMember>
		<BlockGenusMember>small</BlockGenusMember>
		<BlockGenusMember>wide</BlockGenusMember>
		<BlockGenusMember>narrow</BlockGenusMember>
		<BlockGenusMember>tall</BlockGenusMember>
		<BlockGenusMember>little</BlockGenusMember>
	</BlockDrawer>
 -->
 
	<BlockDrawer name="タートル（見た目と判定）" type="factory"
		button-color="153 0 0">
		<BlockGenusMember>Turtle-show[]</BlockGenusMember>
		<BlockGenusMember>Turtle-hide[]</BlockGenusMember>
		<BlockGenusMember>Turtle-isShow[]</BlockGenusMember>
		<BlockGenusMember>Turtle-looks[]</BlockGenusMember>
		<BlockGenusMember>Turtle-contains[@int@int]</BlockGenusMember>
		<BlockGenusMember>Turtle-intersects[]</BlockGenusMember>
	</BlockDrawer>

	<BlockDrawer button-color="153 0 0" name="タートル（キーとマウス）">
		<BlockGenusMember>Turtle-key[]</BlockGenusMember>
		<BlockGenusMember>Turtle-keyDown[]</BlockGenusMember>
		<BlockGenusMember>Turtle-mouseX[]</BlockGenusMember>
		<BlockGenusMember>Turtle-mouseY[]</BlockGenusMember>
		<BlockGenusMember>Turtle-mouseClicked[]</BlockGenusMember>
		<BlockGenusMember>Turtle-leftMouseClicked[]</BlockGenusMember>
		<BlockGenusMember>Turtle-rightMouseClicked[]</BlockGenusMember>
		<BlockGenusMember>Turtle-doubleClick[]</BlockGenusMember>
		<BlockGenusMember>Turtle-mouseDown[]</BlockGenusMember>
		<BlockGenusMember>Turtle-leftMouseDown[]</BlockGenusMember>
		<BlockGenusMember>Turtle-rightMouseDown[]</BlockGenusMember>
	</BlockDrawer>

	<BlockDrawer name="タートル(その他)" type="factory" button-color="153 0 0">
		<BlockGenusMember>Turtle-update[]</BlockGenusMember>
		<BlockGenusMember>Turtle-sleep[@int]</BlockGenusMember>
		<BlockGenusMember>Turtle-input[]</BlockGenusMember>
		<BlockGenusMember>Turtle-print[@string]</BlockGenusMember>
	</BlockDrawer>

	<BlockDrawer name="タートル（Text,Image,Sound）" type="factory" button-color="153 0 102">
		<BlockGenusMember>local-var-object-Text</BlockGenusMember>
		<BlockGenusMember>TextTurtle-text[@string]</BlockGenusMember>
		<BlockGenusMember>TextTurtle-getText[]</BlockGenusMember>
		<!-- image -->
		<BlockGenusMember>local-var-object-Image</BlockGenusMember>
		<BlockGenusMember>ImageTurtle-image[@string]</BlockGenusMember>
		<!-- sound -->
		<BlockGenusMember>local-var-object-Sound</BlockGenusMember>
		<BlockGenusMember>SoundTurtle-file[@string]</BlockGenusMember>
		<BlockGenusMember>SoundTurtle-play[]</BlockGenusMember>
		<BlockGenusMember>SoundTurtle-loop[]</BlockGenusMember>
		<BlockGenusMember>SoundTurtle-stop[]</BlockGenusMember>
		<BlockGenusMember>SoundTurtle-isPlaying[]</BlockGenusMember>
		<BlockGenusMember>SoundTurtle-getVolume[]</BlockGenusMember>
		<BlockGenusMember>SoundTurtle-setVolume[]</BlockGenusMember>
		<BlockGenusMember>SoundTurtle-loadOnMemory[]</BlockGenusMember>
	</BlockDrawer>
<!-- 	
	<BlockDrawer name="ImageTurtle" type="factory"
		button-color="153 0 102">
		<BlockGenusMember>local-var-object-Image</BlockGenusMember>
		<BlockGenusMember>image</BlockGenusMember>
		<BlockGenusMember>getImage</BlockGenusMember>
	</BlockDrawer>

	<BlockDrawer name="SoundTurtle" type="factory"
		button-color="153 0 102">
		<BlockGenusMember>local-var-object-Sound</BlockGenusMember>
		<BlockGenusMember>file</BlockGenusMember>
		<BlockGenusMember>play</BlockGenusMember>
		<BlockGenusMember>loop</BlockGenusMember>
		<BlockGenusMember>stop</BlockGenusMember>
		<BlockGenusMember>isPlaying</BlockGenusMember>
		<BlockGenusMember>getVolume</BlockGenusMember>
		<BlockGenusMember>setVolume</BlockGenusMember>
		<BlockGenusMember>loadOnMemory</BlockGenusMember>
	</BlockDrawer>
-->
	
	<BlockDrawer name="タートル（リスト）" type="factory" button-color="255 255 100">
		<BlockGenusMember>local-var-object-List</BlockGenusMember>
		<BlockGenusMember>ListTurtle-get[@int]</BlockGenusMember>
		<BlockGenusMember>ListTurtle-getSize[]</BlockGenusMember>
		<BlockGenusMember>ListTurtle-add[@int]</BlockGenusMember>
		<BlockGenusMember>ListTurtle-addFirst[@turtle]</BlockGenusMember>
		<BlockGenusMember>ListTurtle-addLast[@turtle]</BlockGenusMember>
		<BlockGenusMember>ListTurtle-addAll[@listturtle]</BlockGenusMember>
		<BlockGenusMember>ListTurtle-moveAllTo[@listturtle]</BlockGenusMember>
		<BlockGenusMember>ListTurtle-removeFirst[@turtle]]</BlockGenusMember>
		<BlockGenusMember>ListTurtle-removeLast[]</BlockGenusMember>
		<BlockGenusMember>ListTurtle-removeAll[]</BlockGenusMember>
		<BlockGenusMember>ListTurtle-getCursor[]</BlockGenusMember>
		<BlockGenusMember>ListTurtle-setCursor[@int]</BlockGenusMember>
		<BlockGenusMember>ListTurtle-moveCursorToNext[]</BlockGenusMember>
		<BlockGenusMember>ListTurtle-moveCursorToPrevious[]</BlockGenusMember>
		<BlockGenusMember>ListTurtle-getObjectAtCursor[]</BlockGenusMember>		
		<BlockGenusMember>ListTurtle-addToBeforeCursor[@turtle]</BlockGenusMember>
		<BlockGenusMember>ListTurtle-addToAfterCursor[@turtle]</BlockGenusMember>
		<BlockGenusMember>ListTurtle-removeAtCursor[]</BlockGenusMember>
		<BlockGenusMember>ListTurtle-shuffle[]</BlockGenusMember>
        <BlockGenusMember>ListTurtle-warpByTopLeft[@int@int]</BlockGenusMember>
	</BlockDrawer>
	
	<BlockDrawer name="タートル（Card,Button,Input）" type="factory" button-color="255 255 100">
		<BlockGenusMember>new-object-CardTurtle</BlockGenusMember>
		<BlockGenusMember>CardTurtle-getNumber[]</BlockGenusMember>
		<BlockGenusMember>CardTurtle-getText[]</BlockGenusMember>
		<!-- button -->
		<BlockGenusMember>new-object-ButtonTurtle</BlockGenusMember>
		<BlockGenusMember>ButtonTurtle-isClicked[]</BlockGenusMember>
		<BlockGenusMember>ButtonTurtle-fontsize[@int]</BlockGenusMember>
		<!--Input  -->
		<BlockGenusMember>new-object-InputTurtle</BlockGenusMember>
		<BlockGenusMember>InputTurtle-getText[]</BlockGenusMember>
		<BlockGenusMember>InputTurtle-clearText[]</BlockGenusMember>
		<BlockGenusMember>InputTurtle-setActive[]</BlockGenusMember>
		<BlockGenusMember>InputTurtle-isActive[]</BlockGenusMember>
		<BlockGenusMember>InputTurtle-toJapaneseMode[]</BlockGenusMember>
		<BlockGenusMember>InputTurtle-toEnglishMode[]</BlockGenusMember>
		<BlockGenusMember>InputTurtle-fontsize[@int]</BlockGenusMember>
	</BlockDrawer>
<!--  
	<BlockDrawer name="ButtonTurtle" type="factory" button-color="255 255 100">
		<BlockGenusMember>new-object-ButtonTurtle</BlockGenusMember>
		<BlockGenusMember>isClicked</BlockGenusMember>
		<BlockGenusMember>fontsize</BlockGenusMember>
	</BlockDrawer>	
-->
	 
<!-- 	
	 <BlockDrawer name="InputTurtle" type="factory" button-color="255 255 100">
		<BlockGenusMember>new-object-InputTurtle</BlockGenusMember>
		<BlockGenusMember>getText</BlockGenusMember>
		<BlockGenusMember>text</BlockGenusMember>
		<BlockGenusMember>clearText</BlockGenusMember>
		<BlockGenusMember>setActive</BlockGenusMember>
		<BlockGenusMember>isActive</BlockGenusMember>
		<BlockGenusMember>toJapaneseMode</BlockGenusMember>
		<BlockGenusMember>toEnglishMode</BlockGenusMember>
		<BlockGenusMember>fontsize</BlockGenusMember>
	</BlockDrawer>
-->
    

</BlockDrawerSet>